#include <bits/stdc++.h>
using namespace std;

typedef pair<int, int> ii;
int n, m, timer = 0;
vector<int> adj[1005];
int disc[1005], low[1005];
bool visited[1005];
vector<ii> bridge;

void nhap(){
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		int x, y; cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	memset(visited, false, sizeof(visited));
}

void DFS(int u, int par){
	visited[u] = true;
	disc[u] = low[u] = ++timer;
	for(int v : adj[u]){
		if(v == par) continue;
		if(!visited[v]){
			DFS(v, u);
			low[u] = min(low[u], low[v]);
			if(disc[u] < low[v]){
				bridge.push_back({u, v});
			}
		}
		else{
			low[u] = min(low[u], disc[v]);
		}
	}
}

int main(){
	nhap();
	for(int i = 1; i <= n; i++){
		if(!visited[i]){
			DFS(i, -1);
		}
	}
	for(ii e : bridge){
		cout << e.first << ' ' << e.second << endl;
	}
}
