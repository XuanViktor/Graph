#include <bits/stdc++.h>
using namespace std;

int n, m;
vector<int> adj[1001];
bool visited[1001];
int parent[1001];

void input(){
	cin >> n >> m;
	for (int i = 0; i < m; i++){
		int x,y; cin >> x >> y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	for (int i = 1; i <= n; i++){
		sort(begin(adj[i]), end(adj[i]));
	}
}

bool bfs(int u){
	queue<int> q;
	visited[u] = true;
	q.push(u);
	while (!q.empty()){
		int v = q.front(); q.pop();
		//cout << v << " ";
		for (int x : adj[v]){
			if (!visited[x]){
				q.push(x);
				visited[x] = true;
				parent[x] = v;
			}
			else if (x != parent[v]){
				return true;
			}
		}
	}
	return false;
}

bool dfs(int u){
	visited[u] = true;
	for (int v : adj[u]){
		if (!visited[v]){
			parent[v] = u;
			if (dfs(v)) return true;
		}
		else if (v != parent[u]) return true;
	}
	return false;
}

int main(){
	input();
	for (int i = 1; i <= n; i++){
		if (!visited[i]){
			if (bfs(i)) {
				cout << "YES"; 
				return 0;
			}
		}
	}
	cout << "NO";
}
