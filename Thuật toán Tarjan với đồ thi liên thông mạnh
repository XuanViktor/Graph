#include <bits/stdc++.h>
using namespace std;

int n, m, timer = 0, scc = 0;
vector<int> adj[1005];
int disc[1005], low[1005];
bool visited[1005], in_stack[1005];
stack<int> st;

void nhap(){
	cin >> n >> m;
	for(int i = 0; i < m; i++){
		int x, y; cin >> x >> y;
		adj[x].push_back(y);
	}
	memset(visited, false, sizeof(visited));
	memset(in_stack, false, sizeof(visited));
}

void DFS(int u){
	visited[u] = true; in_stack[u] = true;
	disc[u] = low[u] = ++timer;
	st.push(u);
	for(int v : adj[u]){
		if(!visited[v]){
			DFS(v);
			low[u] = min(low[u], low[v]);
		}
		else{
			low[u] = min(low[u], disc[v]);
		}
	}
	if(low[u] == disc[u]){
		++scc;
		cout << "Thanh phan thu " << scc << " : ";
		while(st.top() != u){
			cout << st.top() << ' ';
			in_stack[st.top()] = false;
			st.pop();
		}
		cout << st.top() << endl;
		in_stack[st.top()] = false;
		st.pop();
	}
}

int main(){
	nhap();
	for(int i = 1; i <= n; i++){
		if(!visited[i]){
			DFS(i);
		}
	}
	cout << "Tong: " <<  scc << endl;
}
