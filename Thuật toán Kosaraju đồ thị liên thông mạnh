#include <bits/stdc++.h>
using namespace std;

int n, m;
vector<int> adj[1001];
vector<int> T_adj[1001];
bool visited[1001];
stack<int> st;

void input(){
	cin >> n >> m;
	for (int i = 0; i < m; i++){
		int x,y; cin >> x >> y;
		adj[x].push_back(y); // graph
		T_adj[y].push_back(x); // transpose graph
	}
	memset(visited,false,sizeof(visited));
	for (int i = 1; i <= n; i++){
		sort(begin(adj[i]), end(adj[i]));
	}
}
void dfs1(int u){
	visited[u] = true;
	for (int v: adj[u]){
		if (!visited[v]){
			dfs1(v);
		}
	}
	st.push(u); // add u at stack
}

void dfs2(int u){
	visited[u] = true;
	cout << u << " ";
	for (int v: T_adj[u]){
		if (!visited[v]){
			dfs2(v);
		}
	}
}

void Kosaraju(){
	for (int i = 1; i <= n; i++){
		if (!visited[i]){
			dfs1(i);
		}
	}
	memset(visited,false,sizeof(visited));
	int cnt = 0;
	while (!st.empty()){
		int u = st.top(); st.pop();
		if (!visited[u]){
			++cnt;
			cout << "Thanh Phan lien thong manh thu " << cnt << " : ";
			dfs2(u); cout << endl; 
		}
	}
}

int main(){
	input();
	Kosaraju();
//	7 8
//	1 2
//	2 3
//	3 1
//	3 6
//	6 4
//	4 5
//	5 7
//	7 4
}
