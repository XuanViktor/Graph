#include <stdio.h>

#define MAX 10

typedef struct graph{
	int n;
	int a[MAX][MAX];
}Dothi;

int read(const char file[], Dothi &g){
	FILE* f;
	f = fopen(file, "rt");
	if (f == NULL){
		printf("Khong mo duoc file\n");
		return 0;
	}
	fscanf(f, "%d", &g.n);
	for (int i = 0; i < g.n; i++){
		for (int j = 0; j < g.n; j++){
			fscanf(f, "%d", &g.a[i][j]);
		}
	}
	fclose(f);
	return 1;
}

void out(Dothi g){
	printf("So dinh cua do thi la %d\n", g.n);
	printf("Ma tran ke cua do thi la: \n");
	for (int i = 0; i < g.n; i++){
		printf("\t");
		for (int j = 0; j < g.n; j++){
			printf("%4d ", g.a[i][j]);
		}
		printf("\n");
	}
}

int checkHopLe(Dothi g){
	for (int i = 0; i < g.n; i++){
		for (int j = 0; j < g.n; j++){
			if (g.a[i][j] != 0 && i == j){
				return 0;
			}
		}
	}
	return 1;
}

int checkVoHuong(Dothi g){
	for (int i = 0; i < g.n; i++){
		for (int j = 0; j < g.n; j++){
			if (g.a[i][j] != g.a[j][i]){
				return 0;
			}
		}
	}
	return 1;
}

void Degree(Dothi g, int nhan[MAX], int i){
	for (int j = 0; j < g.n; j++){
		if (g.a[i][j] != 0 && nhan[j] != nhan[i]){
			nhan[j] = nhan[i];
			Degree(g, nhan, j);
		}
	}
}

void XetLienThong(Dothi g){
	int Nhan[MAX];
	for (int i = 0; i < g.n; i++){
		Nhan[i] = 0;
	}
	int SoTPLT = 0;
	for (int i = 0; i < g.n; i++){
		if (Nhan[i] == 0){
			SoTPLT++;
			Nhan[i] = SoTPLT;
			Degree(g, Nhan, i);
		}
	}
	printf("So thanh phan lien thong la %d \n", SoTPLT);
	for (int i = 1; i <= SoTPLT; i++){
		printf("Thanh phan lien thong thu [%d] gom cac dinh: ", i);
		for (int j = 0; j < g.n; j++){
			if (Nhan[j] == i){
				printf("%d ", j);
			}
		}
		printf("\n");
	}
	printf("\n");
}

int main(){
	Dothi g;
	char inputfile[256];
	printf("Nhap ten tap tin du lieu do thi: "); scanf("%s", inputfile);
	if (read(inputfile, g) == 1){
		printf("Da doc thanh cong du lieu do thi. \n\n");
		out(g);
		XetLienThong(g);
	}
}

