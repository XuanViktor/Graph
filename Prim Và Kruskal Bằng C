#include<stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#define MAX 100
//#define inputFile "M:/tan.txt"

struct DOTHI {
	int n;
	int a[MAX][MAX];
};

int DocMaTranKe(const char TenFile[], DOTHI &g) {
	FILE* f;
	f = fopen(TenFile, "rt");
	if (f == NULL) {
		printf("khong mo duoc file \n");
		return 0;
	}
	fscanf(f, "%d", &g.n);
	for (int i = 0; i < g.n; i++) {
		for (int j = 0; j < g.n; j++) {
			fscanf(f,"%d", &g.a[i][j]);
		}
	}
	fclose(f);
	return 1;
}

void XuatMaTranKe(DOTHI g) {
	printf("So dinh cua do thi la %d\n",g.n);
	printf("Na tran ke cua do thi la: \n");
	for(int i = 0; i<g.n; i++) {
		printf("\t");
		for (int j=0; j<g.n; j++)
			printf("%4d",g.a[i][j]);
		printf("\n");
	}
}
void timDinhLienThong(DOTHI & g, int nhan[MAX], int i) {
	for (int j=0; j<g.n; j++)
		if (g.a[i][j] !=0 && nhan[i] != nhan[j]) {
			nhan[j] = nhan[i];
			timDinhLienThong (g,nhan,j);

		}
}

int soTPLienThong(DOTHI & g) {
	int SoTPLT = 0,nhan[MAX];
	for(int i = 0; i<g.n; i++)
		nhan[i]=0;
	for (int i=0; i<g.n; i++)
		if (nhan[i] == 0) {
			SoTPLT ++;
			nhan[i] = SoTPLT;
			timDinhLienThong(g,nhan,i);
		}
	return SoTPLT;
}

int ChuaXet[MAX];
typedef struct EDGE {
	int u,v,value;
}CANH;
CANH T[MAX];

void Prim (DOTHI g) {
	if (soTPLienThong(g) != 1 ) {
		printf("Do thi khong lien thong , dung thuat toan Prim \n");
		return;
	}
	int nT = 0;
	int ChuaXet[MAX];
	for(int i=0; i<g.n; i++)
		ChuaXet[i]=0;
	ChuaXet[0]=1;
	while (nT<g.n - 1) {
		CANH CanhNhoNhat;
		int GiaTriNhoNhat = 1000;
		for ( int i = 0; i < g.n ; i++) {
			if(ChuaXet[i] == 1) {
				for (int j = 0 ; j < g.n ; j++)
					if (ChuaXet[j] == 0 && g.a[i][j] !=0 && GiaTriNhoNhat >g.a[i][j]) {
						CanhNhoNhat.u = i;
						CanhNhoNhat.v = j;
						CanhNhoNhat.value = g.a[i][j];
						GiaTriNhoNhat = g.a[i][j];
					}
			}
		}
		T[nT++] = CanhNhoNhat;
		ChuaXet[CanhNhoNhat.v] = 1;
	}
	int trongSoCuaCayKhung = 0;
	printf("Cay khung nho nhat Prim cua do thi la \n");
	for ( int i = 0 ; i<nT - 1; i++) {
		printf("(%d,%d),",T[i].u,T[i].v);
		trongSoCuaCayKhung += T[i].value;
	}
	printf("(%d,%d).\n",T[nT-1].u,T[nT-1].v);
	trongSoCuaCayKhung += T[nT - 1].value;
	printf("Tong trong so cay khung la %d\n",trongSoCuaCayKhung);
}

void SapXepTang(CANH E[100], int tongsocanh) {
	for(int i = 0; i < tongsocanh - 1; i++)
		for(int j = i + 1 ; j < tongsocanh; j++)
			if (E[i].value > E[j].value) {
				CANH tmp = E[i];
				E[i] = E[j];
				E[j] = tmp;
			}

}

void Kruskal (DOTHI g) {
	CANH listEdge[MAX];
	int tongsocanh = 0;
	for(int i = 0; i<g.n; i++) {
		for(int j = i+1 ; j<g.n; j++)
			if(g.a[i][j] >0 ) {
				listEdge[tongsocanh].u = i;
				listEdge[tongsocanh].v = j;
				listEdge[tongsocanh].value = g.a[i][j];
				tongsocanh++;
			}
	}

	SapXepTang(listEdge, tongsocanh);
	int nT = 0;
	CANH T[MAX];
	int nhan[MAX];
	for(int i = 0; i < g.n ; i++)
		nhan[i] = i;
	int canhdangxet = 0;
	while(nT<g.n && canhdangxet < tongsocanh) {
		CANH edge = listEdge[canhdangxet];
		int u = nhan[edge.u], v= nhan[edge.v];
		if(u != v) {
			T[nT++] = edge;
			for(int j = 0; j <g.n; j++)
				if(nhan[j] == v) nhan[j] = u;
		}
		canhdangxet++;
	}
	if(nT != g.n -1)
		printf("\nDo thi khong lien thong \n");
	else {
		int trongSoCuaCayKhung = 0;
		printf("Cay khung nho nhat Kruskal cua do thi la\n");
		for(int i = 0; i <nT; i++) {

			printf("(%d,%d),", T[i].u, T[i].v);
			trongSoCuaCayKhung += T[i].value;
		}
		printf("\n Tong trong so cay khung: %d\n", trongSoCuaCayKhung);
	}

}


int main() {
	DOTHI g;
	int i;
	char inputfile[256];
	printf("Nhap ten tap tin du lieu do thi: ");
	scanf("%s", inputfile);
	DocMaTranKe(inputfile,g);
	XuatMaTranKe(g);
	Prim(g);
	Kruskal(g);
	return 0;
}
