Link Submit: https://www.spoj.com/problems/SUBMERGE/
Lưu ý: sử dụng DFS chỉ phù hợp với đồ thị nhỏ < 10^4 đỉnh

#include <bits/stdc++.h>
using namespace std;

const int MAXN = 100005;
vector<int> adj[MAXN];
int cnt = 0, n, m;
bool visited[MAXN];
vector<int> result;

void input() {
    cin >> n >> m;
    if (n == 0 && m == 0) return;
    for (int i = 0; i < m; i++) {
        int x, y;
        cin >> x >> y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    memset(visited, false, sizeof(visited));
}

void dfs(int u) {
    cnt++; visited[u] = true;
    for (int v : adj[u]) {
        if (!visited[v]){
            dfs(v);
        }
    }
}

int main(){
    while (1) {
        input();
        if (n == 0 && m == 0){
            break;
        }
        int res = 0;
        for (int i = 1; i <= n; i++){
            memset(visited, false, sizeof(visited));
            visited[i] = true; // xóa từng đỉnh
            cnt = 0; // đếm các đỉnh mà nó thăm
            if (i == 1) dfs(2); // nếu là đỉnh 1 thì bắt đầu đỉnh 2
            else dfs(1); // các đỉnh còn lại thì bắt đầu đỉnh 1
            if (cnt != n - 1) {
                res++; // nếu bắt đầu đỉnh i mà không thăm hết tất cả n - 1 đỉnh -> nó là đỉnh trụ
            }

        }
        memset(adj, 0, sizeof(adj));
        result.push_back(res);
    }
    for (int x : result){
        cout << x << endl;
    }
}
